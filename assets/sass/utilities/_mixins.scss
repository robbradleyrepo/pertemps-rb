// Clearfix
@mixin clearfix() {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

// Mixin that will include the fall back px declaration as well as the calculated rem value.
@mixin font-size($size) {
    font-size: $size;
    font-size: calculateRem($size);
}

// Border Radius
@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    border-radius: $radius;
    background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

// Retina Images
@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
          (-o-min-device-pixel-ratio: 2.6/2),
          (-webkit-min-device-pixel-ratio: 1.3),
          (min-device-pixel-ratio: 1.3),
          (min-resolution: 1.3dppx) {
      /* on retina, use image that's scaled by 2 */
      background-image: url($image);
      background-size: $width $height;
  }
}

// Transition
@mixin transition($args...) {
	-webkit-transition: $args;
	-moz-transition: $args;
	-ms-transition: $args;
	-o-transition: $args;
	transition: $args;
  }


@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }  
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @keyframes #{$animation-name} {
        @content;
    }
}

@mixin animation($str) {
	-webkit-animation: #{$str};
	-moz-animation: #{$str};
	-ms-animation: #{$str};
	-o-animation: #{$str};
	animation: #{$str};      
}

// Vertical Align
@mixin vertical-align {
    position: relative;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
}

// Un-Vertical Align
@mixin un-vertical-align {
    position: relative;
    top: inherit;
    -webkit-transform: inherit;
    -ms-transform: inherit;
    transform: inherit;
}

// Columns
@mixin column-count($value) {
	-moz-column-count: $value;
	-webkit-column-count: $value;
    -moz-columns: $value;
    column-count: $value;
}

@mixin placeholder {    
    &.placeholder { @content; }    
    &:-moz-placeholder { @content; }    
    &::-moz-placeholder { @content; }    
    &:-ms-input-placeholder { @content; }    
    &::-webkit-input-placeholder { @content; }
}

@mixin selection {
    ::selection { @content; }
    ::-moz-selection { @content; }
}

// Border Radius
@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    border-radius: $radius;
    background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}